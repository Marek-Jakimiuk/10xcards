name: Main

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm run test:run

      - name: Generate test coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

# e2e-tests:
#   name: E2E Tests
#   runs-on: ubuntu-latest

#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: "20"
#         cache: "npm"

#     - name: Install dependencies
#       run: npm ci

#     - name: Install Playwright browsers
#       run: npx playwright install chromium

#     - name: Build application
#       run: npm run build

#     - name: Run E2E tests
#       run: npm run test:e2e
#       env:
#         CI: true

#     - name: Upload Playwright report
#       uses: actions/upload-artifact@v4
#       if: failure()
#       with:
#         name: playwright-report
#         path: playwright-report/
#         retention-days: 30

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check for build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "Build artifacts not found!"
            exit 1
          fi
          echo "Build completed successfully!"
